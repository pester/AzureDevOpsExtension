name: $(major).$(minor).$(rev:r)

trigger:
  branches:
    exclude:
      - master

stages:
  - stage: build
    displayName: Build VSIX
    jobs:
      - job: Build
        pool:
          vmimage: ubuntu-latest
        steps: 
        - powershell: |
            $VLatestTask = Get-Content ./Extension/PesterTask/PesterV10/task.json -Raw | ConvertFrom-Json
            $VLatestTask.Version.Major = $(Major)
            $VLatestTask.Version.Minor = $(Minor)
            $VLatestTask.Version.Patch = "$(Build.BuildNumber)".Split('.')[-1]
            $VLatestTask | ConvertTo-Json -Depth 10 | Set-Content ./Extension/PesterTask/PesterV10/task.json
          displayName: Update V10 task version

        - task: NodeTool@0
          inputs:
            versionSpec: '10.x'
          displayName: 'Install Node.js'

        - script: |
            npm install
            npm run build
          displayName: 'npm install and build'
          workingDirectory: ./Extension

        - script: |
            npm run package
          workingDirectory: ./Extension

        - task: TfxInstaller@2
          inputs:
            version: 'v0.6.x'

        - task: PackageAzureDevOpsExtension@2
          inputs:
            rootFolder: './Extension'
            outputPath: '$(Build.ArtifactStagingDirectory)/Pester.vsix'
            extensionVersion: "$(Build.BuildNumber)"

        - task: PublishPipelineArtifact@1
          displayName: 'Publish Artifact: vsix'
          inputs:
            targetPath: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: vsix
            publishLocation: pipeline

  - stage: deploydev
    dependsOn: build
    displayName: Deploy Dev Version
    jobs:
      - deployment: deploy
        pool:
          vmImage: windows-latest
        environment: pester-dev
        strategy:
          runOnce:
            deploy:
              steps:
                - task: ms-devlabs.vsts-developer-tools-build-tasks.publish-extension-build-task.PublishExtension@1
                  displayName: 'Publish Extension'
                  inputs:
                    connectedServiceName: Pester
                    fileType: vsix
                    vsixFile: '$(Pipeline.Workspace)/vsix/pester.vsix'
                    extensionTag: '-DEV'
                    updateTasksVersion: false
                    extensionVisibility: private

  - stage: validatedev
    dependsOn: deploydev
    displayName: Validate Dev Deployed
    jobs:
      - deployment: validate
        displayName: Validate publish
        pool:
          vmImage: windows-latest
        environment: pester
        strategy:
          runOnce:
            deploy:
              steps:
                - powershell: |
                    Write-Host "Pester task avaiable"

  - stage: testv9
    displayName: Test v9
    dependsOn: validatedev
    jobs:
      - job: win_ps
        displayName: Windows - Win PowerShell
        pool:
          vmImage: windows-latest
        steps:
          - template: pester-v9.yml

      - job: win_ps_core
        displayName: Windows - Powershell
        pool:
          vmImage: windows-latest
        steps:
          - template: pester-v9.yml
            parameters: 
              pscore: true

      - job: linux
        displayName: Linux
        pool:
          vmImage: ubuntu-latest
        steps:
          - template: pester-v9.yml

      - job: mac
        displayName: MacOS
        pool:
          vmImage: macOS-latest
        steps:
          - template: pester-v9.yml

  - stage: testv10
    displayName: Test v10
    dependsOn: validatedev
    jobs:
      - job: win_ps
        displayName: Windows - Win PowerShell
        pool:
          vmImage: windows-latest
        steps:
          - template: pester-v10.yml

      - job: win_ps_core
        displayName: Windows - PowerShell
        pool:
          vmImage: windows-latest
        steps:
          - template: pester-v10.yml
            parameters: 
              pscore: true

      - job: linux
        displayName: Linux
        pool:
          vmImage: ubuntu-latest
        steps:
          - template: pester-v10.yml

      - job: mac
        displayName: MacOS
        pool:
          vmImage: macOS-latest
        steps:
          - template: pester-v10.yml

  - stage:
    dependsOn: 
      - testv10
      - testv9
    displayName: Deploy Prod Version
    jobs:
      - deployment: deploy
        pool:
          vmImage: windows-latest
        environment: pester-prod
        strategy:
          runOnce:
            deploy:
              steps:
                - task: ms-devlabs.vsts-developer-tools-build-tasks.publish-extension-build-task.PublishExtension@1
                  displayName: 'Publish Extension'
                  inputs:
                    connectedServiceName: Pester Prod
                    fileType: vsix
                    vsixFile: '$(Pipeline.Workspace)/vsix/pester.vsix'
                    updateTasksVersion: false
